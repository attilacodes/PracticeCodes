######################
#Random Walk Exercise#
######################

# Roll a dice. 
# If you roll 1 or 2, you step back 1
# If you roll 3, 4, 5 you step forward 1
# If you roll 6, you can roll again and step forward the amount you rolled

######################

# This second verison also simulates the game 10 times and plots a graph of the 10 simulations

######################

# Importing NumPy as np
import numpy as np

# Import matplotlib.pyplot as plt
import matplotlib.pyplot as plt

# Setting seed to a random integer (pseudo-random)
np.random.seed(123)    # Seed makes sure that the random integers are always the same (hence pseudo-random)

# Initialization
random_walk = [0]    # Creating a list with where the random walk start at 0

# Creating a loop

all_walks = []
for i in range(10) :    # Simulating the game 10 times
    random_walk = [0]
    for x in range(100) :
        step = random_walk[-1]
        dice = np.random.randint(1,7)
        if dice <= 2:
            step = max(0, step - 1)
        elif dice <= 5:
            step = step + 1
        else:
            step = step + np.random.randint(1,7)
        random_walk.append(step)
    all_walks.append(random_walk)

# Converting all_walks to NumPy array
np_aw = np.array(all_walks)

# Transposeing np_aw
np_aw_t = np.transpose(np_aw)

# Plot np_aw_t and show
plt.plot(np_aw_t)
plt.show()
